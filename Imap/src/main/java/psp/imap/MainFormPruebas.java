/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package psp.imap;

import java.io.UnsupportedEncodingException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/**
 *
 * @author angel
 */
public class MainFormPruebas extends javax.swing.JFrame {

    /** Creates new form MainForm */
    public MainFormPruebas() {
        initComponents();
        this.setLocationRelativeTo(null);
        lblError.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RecuperacionDeCorreos = new javax.swing.ButtonGroup();
        CopiaSeguridad = new javax.swing.ButtonGroup();
        tabpnlCorreos = new javax.swing.JTabbedPane();
        pnlImap = new javax.swing.JPanel();
        pnlSmtp = new javax.swing.JPanel();
        lblGustado = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        rbtnYes = new javax.swing.JRadioButton();
        rbtnNo = new javax.swing.JRadioButton();
        lblCopiaSeguridad = new javax.swing.JLabel();
        rbtnAlMes = new javax.swing.JRadioButton();
        rbtnAlAny = new javax.swing.JRadioButton();
        rbtnNunca = new javax.swing.JRadioButton();
        lblCorreo = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout pnlImapLayout = new javax.swing.GroupLayout(pnlImap);
        pnlImap.setLayout(pnlImapLayout);
        pnlImapLayout.setHorizontalGroup(
            pnlImapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );
        pnlImapLayout.setVerticalGroup(
            pnlImapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        tabpnlCorreos.addTab("IMAP", pnlImap);

        lblGustado.setText("<html><p width=150>Te ha gustado la\nrecuperación de correos?</p></html>");

        lblNombre.setText("Cual es tu nombre?");

        RecuperacionDeCorreos.add(rbtnYes);
        rbtnYes.setText("Si");

        RecuperacionDeCorreos.add(rbtnNo);
        rbtnNo.setText("No");

        lblCopiaSeguridad.setText("<html><p width=175>Cada cuanto sueles hacer una copia de seguridad de tus correos?</p></html>");

        CopiaSeguridad.add(rbtnAlMes);
        rbtnAlMes.setText("Una vez al mes");

        CopiaSeguridad.add(rbtnAlAny);
        rbtnAlAny.setText("Una vez al año");

        CopiaSeguridad.add(rbtnNunca);
        rbtnNunca.setText("Nunca");

        lblCorreo.setText("Cual es tu correo?");

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        lblError.setForeground(new java.awt.Color(204, 0, 0));
        lblError.setText("jLabel1");

        javax.swing.GroupLayout pnlSmtpLayout = new javax.swing.GroupLayout(pnlSmtp);
        pnlSmtp.setLayout(pnlSmtpLayout);
        pnlSmtpLayout.setHorizontalGroup(
            pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmtpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSmtpLayout.createSequentialGroup()
                        .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre))
                        .addGap(45, 45, 45)
                        .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCorreo)))
                    .addComponent(rbtnNunca)
                    .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnlSmtpLayout.createSequentialGroup()
                            .addComponent(lblError)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnviar))
                        .addGroup(pnlSmtpLayout.createSequentialGroup()
                            .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCopiaSeguridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbtnAlMes)
                                .addComponent(rbtnAlAny))
                            .addGap(18, 18, 18)
                            .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGustado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbtnYes)
                                .addComponent(rbtnNo)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlSmtpLayout.setVerticalGroup(
            pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmtpLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlSmtpLayout.createSequentialGroup()
                        .addComponent(lblCopiaSeguridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnAlMes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnAlAny))
                    .addGroup(pnlSmtpLayout.createSequentialGroup()
                        .addComponent(lblGustado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnYes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnNo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnNunca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblCorreo))
                .addGap(6, 6, 6)
                .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(pnlSmtpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(lblError))
                .addContainerGap())
        );

        tabpnlCorreos.addTab("SMTP", pnlSmtp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpnlCorreos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpnlCorreos)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed

        Pattern comprobante = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher = comprobante.matcher(txtCorreo.getText());
        
        if ((rbtnYes.isSelected() || rbtnNo.isSelected()) 
                && (rbtnAlMes.isSelected() || rbtnAlAny.isSelected() || rbtnNunca.isSelected())
                && !txtNombre.getText().isBlank() && !txtNombre.getText().isEmpty()
                && !txtCorreo.getText().isBlank() && !txtCorreo.getText().isEmpty()) {
            
            if (matcher.find() == true) {
                lblError.setVisible(false);
                lblError.setText("");
                
                 Properties prop = new Properties();
		prop.put("mail.smtp.host", "smtp.gmail.com");
                prop.put("mail.smtp.port", "465");
                prop.put("mail.smtp.auth", "true");
                prop.put("mail.smtp.socketFactory.port", "465");
                prop.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                
                Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication("pruebaspsp111@gmail.com", "pspimap123");
                    }
                });
                
                try {
                    
                    MimeMessage message = new MimeMessage(session);
                    
                    //Message msg = new MimeMessage(session);
                    
                    
                    
                    message.addHeader("Content-type", "text/HTML; charset=UTF-8");
                    message.addHeader("format", "flowed");
                    message.addHeader("Content-Transfer-Encoding", "8bit");
                    message.setFrom(new InternetAddress("pruebaspsp111@gmail.com", "pruebas"));
                    message.setReplyTo(InternetAddress.parse("pruebaspsp111@gmail.com", false));
                    /*
                    Content-Type: text/plain; charset="iso-2022-jp"
                    Content-Transfer-Encoding: 7bit
                    Content-Disposition: inline; filename="test.txt"
                    */
                    
                    
                    
                    
                    
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("pruebaspsp111@gmail.com, " + txtCorreo.getText())
                    );
                    String kjasd = "alkjsd";
                    message.setSubject("HOLAAA", "UTF-8");
                    message.setText("aslkuhdgdgalof", "UTF-8");

                    Transport.send(message);

                    System.out.println("Done");
                } catch (MessagingException e) {
                    e.printStackTrace();
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MainFormPruebas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }  
            else {
                lblError.setVisible(true);
                lblError.setText("Por favor, ponga bien el correo.");
            }  
        } else {
            lblError.setVisible(true);
            lblError.setText("Por favor, rellene todos los datos.");
        } 
    }//GEN-LAST:event_btnEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFormPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFormPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFormPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFormPruebas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFormPruebas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup CopiaSeguridad;
    private javax.swing.ButtonGroup RecuperacionDeCorreos;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel lblCopiaSeguridad;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblGustado;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel pnlImap;
    private javax.swing.JPanel pnlSmtp;
    private javax.swing.JRadioButton rbtnAlAny;
    private javax.swing.JRadioButton rbtnAlMes;
    private javax.swing.JRadioButton rbtnNo;
    private javax.swing.JRadioButton rbtnNunca;
    private javax.swing.JRadioButton rbtnYes;
    private javax.swing.JTabbedPane tabpnlCorreos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

}
